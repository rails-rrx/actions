name: rails-rrx-docker
description: Build a Ruby on Rails docker image
author: Dan Drew

inputs:
  repository:
    description: 'Private docker repository'
  username:
    description: 'Repository or Docker Hub username'
    required: true
  password:
    description: 'Repository or Docker Hub password/token'
    required: true
  image_name:
    description: 'Name of Docker image to create'
    required: true
  image_version:
    description: 'Version of Docker image'
    required: true
  latest:
    description: 'Tag image as latest'
    required: false
    default: 'false'
  ruby_version:
    description: 'Ruby version'
    default: '3.2.1'
  worker:
    required: false
    description: 'Set if this image is for a worker. Valid values: delayed_job'
  packages:
    default: ''
    required: false
    description: 'Additional Apt packages to install'
  database:
    required: true
    description: 'Database type: mysql, mariadb, postgresql, none'

runs:
  using: composite
  steps:
    - name: Get Bundler version
      id: bundler_version
      shell: bash
      run: echo "version=`grep -F 'BUNDLED' -A 1 Gemfile.lock | grep -Eo '[\.0-9]+'`" > $GITHUB_OUTPUT

    - name: Copy Docker files
      shell: bash
      run: |
        cp '${{ github.action_path }}/Dockerfile' rrx.Dockerfile
        cp -r '${{ github.action_path }}/docker' .

    - id: full_name
      shell: bash
      run: echo 'value=${{ format('{0}{1}{2}', inputs.repository || '', inputs.repository && '/' || '', inputs.image_name) }}' > $GITHUB_OUTPUT

    -
      name: Build
      id: build
      shell: bash
      env:
        full_name: ${{ format('{0}{1}{2}', inputs.repository || '', inputs.repository && '/' || '', inputs.image_name) }}
        image_version: ${{ inputs.image_version }}
        ruby_version: ${{ inputs.ruby_version }}
        bundler_version: ${{ steps.bundler_version.outputs.version }}
        latest: "${{ inputs.latest }}"
        packages: "${{ inputs.packages }}"
        database: ${{ inputs.database }}
      run: |
        # Build Docker image
        source ${{ github.action_path }}/build.sh

    -
      name: Login to Repository
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.repository }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    -
      name: Push
      shell: bash
      run: docker push -q -a ${{ steps.build.outputs.full_name }}
